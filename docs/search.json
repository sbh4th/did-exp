[
  {
    "objectID": "LICENSE.html",
    "href": "LICENSE.html",
    "title": "",
    "section": "",
    "text": "The MIT License (MIT)\nCopyright (c) 2023 Sam Harper\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "did-exp.html",
    "href": "did-exp.html",
    "title": "Difference-in-Differences with Heterogenous Treatment Effects",
    "section": "",
    "text": "In this document we aim to provide an overview of the issues and methods for evaluating policy impacts in the context of heterogeneous treatments and staggered treatments.\n\n\n\n\nCode\nset.seed(394)\nlibrary(tidyverse)\n\n# unit fixed effects (unobserved heterogeneity)\nunit <- tibble(\n  unit = 1:1000,\n  # generate clusters\n  state = sample(1:30, 1000, replace = TRUE),\n  unit_fe = rnorm(1000, state/10, 1),\n  # generate instantaneous treatment effect\n  #mu = rnorm(nobs, true_mu, 0.2)\n  mu = 2\n)\n\n# year fixed effects (first part)\nyear <- tibble(\n  year = 2011:2020,\n  year_fe = rnorm(length(year), 0, 0.5)\n)\n\n# Put the clusters into treatment groups\ntreat_taus <- tibble(\n  # sample the clusters randomly\n  state = sample(1:30, 30, replace = FALSE),\n  # place the randomly sampled states into 1\\{t \\ge g \\}G_g\n  cohort_year = sort(rep(c(2014, 2016, 2018), 10))\n)\n\n# make main dataset\n# full interaction of unit X year \nd <- expand_grid(unit = 1:1000, year = 2011:2020) %>% \n  left_join(., unit) %>% \n  left_join(., year) %>% \n  left_join(., treat_taus) %>% \n  # make error term and get treatment indicators and treatment effects\n  # Also get cohort specific trends (modify time FE)\n  mutate(error = rnorm(1000*10, 0, 2),\n         treat = ifelse((year >= \n           cohort_year)*(cohort_year != 2018), 1, 0),\n         # treatment effect = 1 if 2016, 2 if 2014, annually\n         mu = ifelse(cohort_year==2016, 1, 2),\n         tau = ifelse(treat == 1, mu, 0),\n         year_fe = year_fe + 0.5*(year - cohort_year)\n  ) %>% \n  # calculate cumulative treatment effects\n  group_by(unit) %>% \n  mutate(tau_cum = cumsum(tau)) %>% \n  ungroup() %>% \n  # calculate the dependent variable\n  mutate(y = (2020 - cohort_year) + \n           unit_fe + year_fe + tau_cum + error) %>%\n  # Relabel 2018 cohort as never-treated\n  mutate(cohort_year = ifelse(cohort_year == 2018, Inf, cohort_year))\n\n\nFor this example we will use a simulated example.1 For the time being, we are ignoring covariates.\nWe are simulating a staggered treatment setup where 30 ‘clusters’, which could be countries, villages, states, etc., but in this case we will use states (\\(state = \\{1,2,\\dots,30\\}\\)), which are randomly assigned into 3 treatment groups depending on the treatment starting year (2014, 2016, never treated). We denote the treatment starting period as \\(g\\) that encompasses the 3 groups (i.e., \\(g \\in \\{ 2014, 2016, \\text{-Inf}\\}\\)), where \\(\\text{-Inf}\\) indicates the never treated group (following Callaway and Sant’Anna (2021) here such that \\(g = \\infty\\) for a never-treated group). We have 1000 units spread out over the 30 clusters, which could be individuals, schools, hospitals, or some other smaller units \\(i\\), which are randomly assigned to one of the 30 states. Let \\(G_i\\) indicates the group/cohort unit \\(i\\) belongs to, i.e., \\(G \\subseteq \\{ 2014, 2016, \\infty\\}\\).\nThe data generating process (DGP) for the outcome \\(Y\\) is: \\[Y_{it} = (2020-g) + \\alpha_i + \\beta_t + \\tau_{it} + \\epsilon_{it}\\] where \\(\\alpha_i\\) are unit (i.e., cluster) fixed effects drawn from \\(\\sim N(\\mu_{state}, 1)\\) with state-specific mean \\(\\mu_{state} = state/10\\), \\(\\beta_t\\) are time fixed effects (cohort-specific parallel time-trends) generated as \\[\\beta_t = 0.5 * (t - g) + \\epsilon^{time FE}_t, \\] with \\(\\epsilon^{time FE}_t \\sim N(0, 1)\\), \\(\\epsilon_{i,t} \\sim N(0,2)\\) is an idiosyncratic error term. The \\(\\tau_{i,t}\\) are the (instantaneous) unit-specific treatment effects at time \\(t\\) generated as \\[ \\tau_{it} = \\mu_g \\times (t - g + 1)\\times 1\\{t \\ge g \\}1\\{g\\not=\\infty \\},\\] where \\(t\\) and \\(g\\) are defined as above and \\(1\\{\\}\\) is a logical operator. We set \\(\\mu_{2014} = 2\\), and \\(\\mu_{2016} = 1\\).\nSo, for example, in 2014 when \\(G_{2014}\\) is first treated, \\((t - g + 1)=1\\) and the treatment effect is 2. This setup implies heterogeneity: for the group that started treatment in 2014, its average treatment effects evolves with time since first treatment as \\(2,4,6,\\dots\\). For the group that started treatment in 2016 the average treatment effect evolves with elapsed time as \\(1,2,3,\\dots\\). The treatment effect is zero for the “never-treated” cohort (\\(g=\\infty\\)). In this case the early-treated group (\\(g=2014\\)) benefits more than the later treated group.\nGiven that each group has same size (on average), the true average treatment effect dynamic across treated groups is \\((2+1)/2 = 1.5\\) at the time a unit is treated, \\(2 \\times (2+1)/2 = 3\\) in the first period after treatment started, etc.\nA random sample of 10 rows of the data are shown below:\n\n\nCode\nlibrary(kableExtra)\nds <- sample_n(d,10)\nkable(ds, caption = \"10 rows of simulated data\", digits = 3) %>%\n  kable_styling()\n\n\n\n\n10 rows of simulated data\n \n  \n    unit \n    year \n    state \n    unit_fe \n    mu \n    year_fe \n    cohort_year \n    error \n    treat \n    tau \n    tau_cum \n    y \n  \n \n\n  \n    59 \n    2020 \n    8 \n    1.424 \n    2 \n    0.121 \n    Inf \n    -2.081 \n    0 \n    0 \n    0 \n    1.464 \n  \n  \n    501 \n    2018 \n    9 \n    0.887 \n    1 \n    0.168 \n    2016 \n    -2.445 \n    1 \n    1 \n    3 \n    5.610 \n  \n  \n    807 \n    2017 \n    11 \n    -1.600 \n    1 \n    1.240 \n    2016 \n    0.774 \n    1 \n    1 \n    2 \n    6.414 \n  \n  \n    348 \n    2013 \n    16 \n    0.934 \n    2 \n    -3.241 \n    Inf \n    -1.346 \n    0 \n    0 \n    0 \n    -1.653 \n  \n  \n    562 \n    2019 \n    26 \n    2.671 \n    2 \n    3.665 \n    2014 \n    -4.017 \n    1 \n    2 \n    12 \n    20.318 \n  \n  \n    177 \n    2015 \n    18 \n    2.978 \n    1 \n    -0.325 \n    2016 \n    -2.062 \n    0 \n    0 \n    0 \n    4.590 \n  \n  \n    469 \n    2011 \n    14 \n    2.472 \n    1 \n    -1.927 \n    2016 \n    -1.186 \n    0 \n    0 \n    0 \n    3.359 \n  \n  \n    603 \n    2020 \n    5 \n    -0.642 \n    1 \n    1.121 \n    2016 \n    1.879 \n    1 \n    1 \n    5 \n    11.358 \n  \n  \n    847 \n    2011 \n    3 \n    0.807 \n    2 \n    -0.927 \n    2014 \n    -2.090 \n    0 \n    0 \n    0 \n    3.790 \n  \n  \n    538 \n    2017 \n    11 \n    0.375 \n    1 \n    1.240 \n    2016 \n    -0.659 \n    1 \n    1 \n    2 \n    6.957 \n  \n\n\n\n\n\n\n\n\nBelow we show the evolution of \\(y\\) over time for the 3 treatment groups (2014, 2016, untreated). The vertical lines indicate the time of treatment, i.e. \\(g=t\\) for each treated group, and the bold lines show the average evolution of the outcome for each treatment group.\n\n\nCode\ntheme_set(theme_classic() + \n            theme(plot.background = element_blank()))\n\nplot <- d %>% \n  ggplot(aes(x = year, y = y, group = unit)) + \n  geom_line(alpha = 1/8, color = \"grey\") + \n  geom_line(data = d %>% \n    group_by(cohort_year, year) %>% \n    summarize(y = mean(y)),\n   aes(x = year, y = y, group = factor(cohort_year),\n    color = factor(cohort_year)), linewidth = 2) + \n  labs(x = \"\", y = \"Y\",  color = \"Treatment group   \") +\n  scale_x_continuous(breaks = c(2012, 2014, 2016, 2018, 2020)) +\n  geom_vline(xintercept = 2014, color = '#E41A1C', linewidth = 2) + \n  geom_vline(xintercept = 2016, color = '#377EB8', linewidth = 2) + \n  scale_color_brewer(palette = 'Set1') + \n  theme(legend.position = 'bottom',\n        #legend.title = element_blank(), \n        axis.title = element_text(size = 14),\n        axis.text = element_text(size = 12)) +\n  scale_color_manual(labels = c(\"2014\", \"2016\", \"Never-treated\"),\n                     values = c(\"#E41A1C\", \"#377EB8\", \"#4DAF4A\")) +\n  ggtitle(\"Simulated data with heterogeneous treatment effect dynamics across cohorts \\n and with a never-treated group\")+\n  theme(plot.title = element_text(hjust = 0.5, size=12))\n\nplot"
  },
  {
    "objectID": "did-exp.html#twfe-average",
    "href": "did-exp.html#twfe-average",
    "title": "Difference-in-Differences with Heterogenous Treatment Effects",
    "section": "TWFE (average)",
    "text": "TWFE (average)\nThe basic model is estimated as:\n\\[Y_{it} = \\alpha_i + \\beta_t + \\gamma D_{it} + \\varepsilon_{it}\\] where \\(D_{i,t}\\) is a time-varying treatment dummy variable that takes value one if a unit \\(i\\) is treated at time \\(t\\), and \\(\\alpha_{i}\\) and \\(\\beta_{t}\\) are fixed effects for unit and time, respectively. We implement this below using the fixest package and cluster the standard errors at the state level.\n\n\nCode\nlibrary(fixest)\nlibrary(fastDummies)\nlibrary(modelsummary)\nlibrary(marginaleffects)\nlibrary(did)"
  },
  {
    "objectID": "did-exp.html#twfe-dynamic",
    "href": "did-exp.html#twfe-dynamic",
    "title": "Difference-in-Differences with Heterogenous Treatment Effects",
    "section": "TWFE (dynamic)",
    "text": "TWFE (dynamic)\nMany analyses using TWFE also typically implement an ‘event study’ type analysis as a robustness check, both to see how the treatment effect may evolve over time in the post period and to see whether there may be some evidence of non-parallel trends in the pre-treatment period. We can implement the event-study type model as: \\[Y_{it} = \\alpha_i + \\beta_t + \\sum_{k\\neq-1} \\gamma_{k} D_{it} + \\varepsilon_{it}\\] where \\(k\\) indicates time indicators relative to first treatment (i.e., \\(k=-2\\) means 2 periods prior to treatment) and \\(\\gamma_{k}\\) are the coefficients on the relative time indicators. To avoid collinearity we exclude one period, which is typically the period just before first treatment (\\(k=-1\\)).\nBelow is a table showing the estimated effects from the TWFE and event-study models. The overall average estimate from the traditional TWFE model is 3.5, which we know isn’t correct, since the average effect should be something closer to \\(\\frac{1}{7}\\sum_{t=1}^{7} t*(2+1)/2 = 6\\)\n\n\nCode\n# Estimate TWFE\ntwfe = fixest::feols(\n  y ~ treat | state + year,\n  data = d,\n  vcov = ~state\n)\n\n# first make dummy columns for relative time\ndata <- d %>% \n  # make dummies\n  mutate(rel_year = year - cohort_year) %>% \n  dummy_cols(select_columns = \"rel_year\") \n\n# estimate the model\ntwfe_event = fixest::feols(\n  y ~ `rel_year_-5` + `rel_year_-4` + `rel_year_-3` + \n      `rel_year_-2` + `rel_year_0` + `rel_year_1` + \n    `rel_year_2` + `rel_year_3` + `rel_year_4` + \n    `rel_year_5` + `rel_year_6` | state + year,\n  data = data,\n  vcov = ~state\n)\n\nrename_rt <- function(old_names) {\n  new_names <- gsub(\"rel_year_\", \"Relative time: \", old_names)\n  setNames(new_names, old_names)\n}\n\nmodelsummary(list(\"TWFE\" = twfe, \n  \"TWFE:Event study\" = twfe_event),\n  coef_rename = rename_rt,\n  gof_omit ='DF|Deviance|R2|AIC|BIC|Log.Lik|ICC|RMSE')\n\n\n\n\n \n  \n      \n    TWFE \n    TWFE:Event study \n  \n \n\n  \n    treat \n    3.543 \n     \n  \n  \n     \n    (0.677) \n     \n  \n  \n    Relative time: -5 \n     \n    1.721 \n  \n  \n     \n     \n    (0.303) \n  \n  \n    Relative time: -4 \n     \n    1.749 \n  \n  \n     \n     \n    (0.290) \n  \n  \n    Relative time: -3 \n     \n    0.611 \n  \n  \n     \n     \n    (0.205) \n  \n  \n    Relative time: -2 \n     \n    0.361 \n  \n  \n     \n     \n    (0.189) \n  \n  \n    Relative time: 0 \n     \n    1.252 \n  \n  \n     \n     \n    (0.221) \n  \n  \n    Relative time: 1 \n     \n    2.583 \n  \n  \n     \n     \n    (0.242) \n  \n  \n    Relative time: 2 \n     \n    4.182 \n  \n  \n     \n     \n    (0.310) \n  \n  \n    Relative time: 3 \n     \n    6.067 \n  \n  \n     \n     \n    (0.344) \n  \n  \n    Relative time: 4 \n     \n    8.064 \n  \n  \n     \n     \n    (0.410) \n  \n  \n    Relative time: 5 \n     \n    11.730 \n  \n  \n     \n     \n    (0.295) \n  \n  \n    Relative time: 6 \n     \n    13.965 \n  \n  \n     \n     \n    (0.369) \n  \n  \n    Num.Obs. \n    10000 \n    10000 \n  \n  \n    Std.Errors \n    by: state \n    by: state \n  \n  \n    FE: state \n    X \n    X \n  \n  \n    FE: year \n    X \n    X \n  \n\n\n\n\n\nHow well do the event study coefficients map on to our true estimates from the DGP? Below we show a plot of the true effects based on the simulated data, as well as the estimates from the event study. The answer is: okay? The TWFE estimates are sensible in the post period, but they also suggest some evidence for non-parallel trends in the pre-period, which, in the before times, might lead one to think the parallel trends assumption is violated, which we know is not the case here since we forced the model to be parallel in the pre period [some text on intuition for this would be helpful here].2\n\n\nCode\n# plot of estimates\npt <- get_estimates(twfe_event) %>%\n  select(term, estimate, conf.low, conf.high) %>%\n  mutate(t = c(-5:-2, 0:6)) %>%\n  bind_rows(tibble(t = -1, estimate = 0, \n    conf.low = 0, conf.high = 0, term = \"rel_year_-1\")) %>%\n  mutate(true_tau = \n    ifelse(t >= 0 & t < 5, ((t + 1) * 1.5), \n           ifelse(t > 4, (t + 1) * 2, 0)))\n\ncolors <- c(\"True Effect\" = \"red\", \"Estimated Effect\" = \"blue\")\n\nplot_es <- pt %>%\n  ggplot(aes(x = t, y = estimate)) + \n    geom_point(color = \"blue\", size = 3) +\n    geom_line(aes(color = 'Estimated Effect'), linewidth = 1) +\n    geom_linerange(aes(ymin = conf.low, ymax = conf.high), \n    color = \"blue\", linewidth = 2, alpha = 0.3) +\n    geom_line(aes(x = t, y = true_tau, color = 'True Effect'), \n              linetype = \"dashed\", linewidth = 2) + \n    geom_hline(yintercept = 0, linetype = \"dashed\") + \n    scale_x_continuous(breaks = -5:6) + \n    labs(x = \"Relative Time\", y = \"Estimate\") +\n    ggtitle(\"TWFE event-study regression estimates\") +\n    scale_color_manual(values = colors) + theme_classic() +\n    theme(legend.position = 'bottom',\n      legend.title = element_blank(), \n      axis.title = element_text(size = 14),\n      axis.text = element_text(size = 12),\n      plot.title = element_text(hjust = 0.5, size=12),\n      plot.background = element_blank())\nplot_es"
  },
  {
    "objectID": "did-exp.html#callaway-santanna",
    "href": "did-exp.html#callaway-santanna",
    "title": "Difference-in-Differences with Heterogenous Treatment Effects",
    "section": "Callaway-Sant’Anna",
    "text": "Callaway-Sant’Anna\nTo avoid the problems with the TWFE specification above, we can instead use the approach recently developed by Callaway and Sant’Anna (2021) that estimates the average treatment effect on the treated (\\(ATT\\)) for each treated group \\(g\\) at each time \\(t\\), i.e., \\(ATT(g,t)\\), where groups are defined according to when they were first treated. The group-time specific estimates of each \\(ATT(g,t)\\) are estimated via regression on subsets of the data for each group and time periods covering pre- and post-intervention, using the following specification:\n\\[Y_{it} = \\beta_{0}^{gt} + \\beta_{1}^{gt}G + \\beta_{2}^{gt}T + \\beta_{3}^{gt}(G\\times T) + \\varepsilon^{gt} \\]\nwhere \\(G\\) and \\(T\\) refer to indicators for group and time period and \\(\\beta_{3}^{gt}\\) is the \\(ATT(g,t)\\) for each group at a given time. Treated groups are compared to not yet treated groups to estimate group-time specific \\(ATTs\\) , which can be combined to estimate the overall effect of the intervention, as well as dynamic treatment effects.\nThe table below compares the estimates from the TWFE model to ‘simple’ aggregate estimate from the CS model. As before, we know that the ‘truth’ here should be something like an average \\(ATT\\) of 6. The TWFE estimate is wrong and biased downwards to around 3.5, where as the CS estimate is 5.9, about what it should be.\n\n\nCode\n# Callaway-Sant'Anna\ncs <- did::att_gt(yname = \"y\", \n                  tname = \"year\",\n                  idname = \"unit\",\n                  gname = \"cohort_year\",\n                  control_group= \"notyettreated\",\n                  bstrap = TRUE,\n                  clustervars = \"state\",\n                  data = d,\n                  print_details = FALSE)\n\ncs_simple <- did::aggte(cs, type = \"simple\")\ncs_event <- did::aggte(cs, type = \"dynamic\")\n\n# wrangle aggregate ATTs for model summary table\nti <- data.frame(\n  term = \"treat\",\n  estimate = cs_simple$overall.att,\n  std.error = cs_simple$overall.se)\n\ngl <- data.frame()\n\ncs_avg <- list(tidy = ti, glance = gl)\nclass(cs_avg) <- \"modelsummary_list\"\n\nmodelsummary(list(\"TWFE\" = twfe, \"Callway-Sant'Anna\" = cs_avg),\n  gof_omit ='_*')\n\n\n\n\n \n  \n      \n    TWFE \n    Callway-Sant'Anna \n  \n \n\n  \n    treat \n    3.543 \n    6.069 \n  \n  \n     \n    (0.677) \n    (0.513) \n  \n\n\n\n\n\nEstimating each group-time ATT in the CS way also allows several different ways of aggregating ATTs, depending on the question at hand. Above we showed the ‘simple’ average ATT, but it is also possible to look at dynamic trends or estimates for each separate treated cohort:\n\nDynamicGroupCalendar\n\n\n\n\nCode\ncs_event <- did::aggte(cs, type = \"dynamic\")\n\nmodelsummary(list(\"CS: Dynamic\" = cs_event),\n  gof_omit ='_*')\n\n\n\n\n \n  \n      \n    CS: Dynamic \n  \n \n\n  \n    ATT(-4) \n    −0.082 \n  \n  \n     \n    (0.231) \n  \n  \n    ATT(-3) \n    0.084 \n  \n  \n     \n    (0.216) \n  \n  \n    ATT(-2) \n    −0.005 \n  \n  \n     \n    (0.157) \n  \n  \n    ATT(-1) \n    −0.062 \n  \n  \n     \n    (0.133) \n  \n  \n    ATT(0) \n    1.541 \n  \n  \n     \n    (0.161) \n  \n  \n    ATT(1) \n    3.286 \n  \n  \n     \n    (0.290) \n  \n  \n    ATT(2) \n    4.633 \n  \n  \n     \n    (0.350) \n  \n  \n    ATT(3) \n    6.197 \n  \n  \n     \n    (0.450) \n  \n  \n    ATT(4) \n    7.616 \n  \n  \n     \n    (0.525) \n  \n  \n    ATT(5) \n    11.796 \n  \n  \n     \n    (0.174) \n  \n  \n    ATT(6) \n    13.809 \n  \n  \n     \n    (0.226) \n  \n\n\n\n\n\n\n\n\n\nCode\ncs_group <- did::aggte(cs, type = \"group\")\n\nmodelsummary(list(\"CS: Group\" = cs_group),\n  gof_omit ='_*')\n\n\n\n\n \n  \n      \n    CS: Group \n  \n \n\n  \n    ATT(Average) \n    5.688 \n  \n  \n     \n    (0.125) \n  \n  \n    ATT(2014) \n    7.886 \n  \n  \n     \n    (0.178) \n  \n  \n    ATT(2016) \n    3.255 \n  \n  \n     \n    (0.167) \n  \n\n\n\n\n\n\n\n\n\nCode\ncs_cal <- did::aggte(cs, type = \"calendar\")\n\nmodelsummary(list(\"CS: Calendar\" = cs_cal),\n  gof_omit ='_*')\n\n\n\n\n \n  \n      \n    CS: Calendar \n  \n \n\n  \n    ATT(2014) \n    1.747 \n  \n  \n     \n    (0.214) \n  \n  \n    ATT(2015) \n    4.195 \n  \n  \n     \n    (0.218) \n  \n  \n    ATT(2016) \n    3.758 \n  \n  \n     \n    (0.559) \n  \n  \n    ATT(2017) \n    5.239 \n  \n  \n     \n    (0.671) \n  \n  \n    ATT(2018) \n    6.635 \n  \n  \n     \n    (0.770) \n  \n  \n    ATT(2019) \n    8.238 \n  \n  \n     \n    (0.862) \n  \n  \n    ATT(2020) \n    9.733 \n  \n  \n     \n    (0.963) \n  \n\n\n\n\n\n\n\n\nFrom the “Group” estimates you can see that the average treatment effect for cohort first treated in 2014 is 8, whereas the effect for the cohort first treated in 2016 is around 2.6. The average reported here is different than the simple average above because it is the average effect of the two groups, rather than the simple average. The ‘calendar’ estimates are average for each time \\(t\\) in the post-treatment period, which is different than the ‘dynamic’ effects, which are averages by time since first treated.\nLet’s also just look and see at how our ‘dynamic’ estimates using CS compare to the truth:\n\n\nCode\n# plot of estimates\nptcs <- get_estimates(cs_event) %>%\n  select(term, estimate, conf.low, conf.high) %>%\n  mutate(t = c(-4:-1, 0:6)) %>%\n  mutate(true_tau = \n    ifelse(t >= 0 & t < 5, ((t + 1) * 1.5), \n           ifelse(t > 4, (t + 1) * 2, 0)))\n\ncolors <- c(\"True Effect\" = \"red\", \"Estimated Effect\" = \"blue\")\n\nplot_escs <- ptcs %>%\n  ggplot(aes(x = t, y = estimate)) + \n    geom_point(color = \"blue\", size = 3) +\n    geom_line(aes(color = 'Estimated Effect'), linewidth = 1) +\n    geom_linerange(aes(ymin = conf.low, ymax = conf.high), \n    color = \"blue\", linewidth = 2, alpha = 0.3) +\n    geom_line(aes(x = t, y = true_tau, color = 'True Effect'), \n              linetype = \"dashed\", linewidth = 2) + \n    geom_hline(yintercept = 0, linetype = \"dashed\") + \n    scale_x_continuous(breaks = -4:6) + \n    labs(x = \"Relative Time\", y = \"Estimate\") +\n    ggtitle(\"CS event-study regression estimates\") +\n    scale_color_manual(values = colors) + theme_classic() +\n    theme(legend.position = 'bottom',\n      legend.title = element_blank(), \n      axis.title = element_text(size = 14),\n      axis.text = element_text(size = 12),\n      plot.title = element_text(hjust = 0.5, size=12),\n      plot.background = element_blank())\nplot_escs\n\n\n\n\n\nThese estimates look good, with no evidence of non-parallel trends in the pre-intervention period."
  },
  {
    "objectID": "did-exp.html#extended-twfe",
    "href": "did-exp.html#extended-twfe",
    "title": "Difference-in-Differences with Heterogenous Treatment Effects",
    "section": "‘Extended’ TWFE",
    "text": "‘Extended’ TWFE\nIn a recent paper Wooldridge (2021) demonstrated that the issue we saw with the TWFE model above is not a problem with the TWFE model per se, only the way that it is specified. In particular, he notes that one can recover nearly identical \\(ATT(g,t)\\) estimates from the linear TWFE model by including a set of interactive fixed effects between treated cohorts and time since treatment. This idea has been referred to as ‘extended’ TWFE, and basically amounts to interacting a time-varying treatment indicator with both the cohort-year indicators and each time period. He uses somewhat different terminology that we will try to adopt here, such that the time-varying treatment indicator is \\(w_{it}\\), cohort dummies indicating treatment at specific times \\(r\\) since the time \\(q\\) the first group is treated, i.e., \\(d_{r}\\) and time period dummies \\(fs_{t}\\) for every possible period \\(s\\) after the first cohort is treated. Putting this together the ETWFE model ends up looking something like this:\n\\[Y_{it} = \\alpha + \\sum_{r=q}^{T} \\beta_{r} d_{r} + \\sum_{s=r}^{T} \\gamma_{s} fs_{t}+ \\sum_{r=q}^{T} \\sum_{s=r}^{T} \\tau_{rt} (d_{r} \\times fs_{t}) + \\varepsilon_{it}\\] Effectively, we are saturating the regression with interactions between treated cohorts and time, such that the \\(\\tau_{rt}\\) are estimates of each group-time ATT. Absent constraints this leads to obvious issues of collinearity. Wooldridge notes in his paper that it is possible to drop the coefficients on the pre-treatment years (hence the ‘pooling’ in his use of the pooled OLS or POLS term), and this is what, in fact the package fixest does as well, so it does not, by default, provide any test of pre-trends like the CS method does above. You may notice that there is no time-varying treatment in the equation above, but Wooldridge (2021) notes in his paper that it is sufficient to use the interactions \\(d_{ir} \\times fs_{t}\\) because \\(w_{it} \\times d_{ir} \\times fs_{t} = d_{ir} \\times fs_{t}\\). However, as we will see later the latter form is helpful for estimating marginal effects, which is likely to be helpful in the context of non-linear models.\nInterestingly, Wooldridge also notes that when multiple clusters are treated at the same time (e.g, we have 10 states treated in 2014), one can include fixed effects for the treatment cohorts rather than each individual cluster (though the SEs should still be clustered at the state level).\n\n\nCode\nlibrary(etwfe)\n\netwfe = fixest::feols(\n  y ~ treat:i(cohort_year, i.year, ref=Inf, ref2 = 2011) | state + year,\n  data = d,\n  vcov = ~state\n)\n\netwfe_c = fixest::feols(\n  y ~ treat:i(cohort_year, i.year, ref=Inf, ref2 = 2011) | \n    cohort_year + year,\n  data = d,\n  vcov = ~state\n)\n\n# wrangle aggregate ATTs for model summary table\nti2 <- data.frame(\n  term = paste(\"ATT(\", cs$group, \",\", cs$t, \")\", sep = \"\"),\n  estimate = cs$att,\n  std.error = cs$se)\n\ngl2 <- data.frame()\n\ncs_atts <- list(tidy = ti2, glance = gl2)\nclass(cs_atts) <- \"modelsummary_list\"\n\n# Compare with CS method\nmodelsummary(\n  list(\"Wooldridge: cluster FEs\" = etwfe, \n       \"Wooldridge: cohort FEs\" = etwfe_c,\n       \"Callaway Sant'Anna\" = cs_atts),\n  coef_rename = \n    c(\"treat:cohort_year::2014:year::2014\" = \"ATT(2014,2014)\",\n      \"treat:cohort_year::2014:year::2015\" = \"ATT(2014,2015)\",\n      \"treat:cohort_year::2014:year::2016\" = \"ATT(2014,2016)\",\n      \"treat:cohort_year::2014:year::2017\" = \"ATT(2014,2017)\",\n      \"treat:cohort_year::2014:year::2018\" = \"ATT(2014,2018)\",\n      \"treat:cohort_year::2014:year::2019\" = \"ATT(2014,2019)\",\n      \"treat:cohort_year::2014:year::2020\" = \"ATT(2014,2020)\",\n      \"treat:cohort_year::2016:year::2016\" = \"ATT(2016,2016)\",\n      \"treat:cohort_year::2016:year::2017\" = \"ATT(2016,2017)\",\n      \"treat:cohort_year::2016:year::2018\" = \"ATT(2016,2018)\",\n      \"treat:cohort_year::2016:year::2019\" = \"ATT(2016,2019)\",\n      \"treat:cohort_year::2016:year::2020\" = \"ATT(2016,2020)\"),\n  shape = term ~ model,\n  gof_omit ='DF|Deviance|R2|AIC|BIC|Log.Lik|ICC|RMSE')\n\n\n\n\n \n  \n      \n    Wooldridge: cluster FEs \n    Wooldridge: cohort FEs \n    Callaway Sant'Anna \n  \n \n\n  \n    ATT(2014,2014) \n    1.813 \n    1.813 \n    1.747 \n  \n  \n     \n    (0.155) \n    (0.155) \n    (0.206) \n  \n  \n    ATT(2014,2015) \n    4.260 \n    4.260 \n    4.195 \n  \n  \n     \n    (0.183) \n    (0.183) \n    (0.234) \n  \n  \n    ATT(2014,2016) \n    6.078 \n    6.078 \n    5.968 \n  \n  \n     \n    (0.173) \n    (0.173) \n    (0.214) \n  \n  \n    ATT(2014,2017) \n    8.021 \n    8.021 \n    7.911 \n  \n  \n     \n    (0.185) \n    (0.185) \n    (0.260) \n  \n  \n    ATT(2014,2018) \n    9.889 \n    9.889 \n    9.779 \n  \n  \n     \n    (0.247) \n    (0.247) \n    (0.265) \n  \n  \n    ATT(2014,2019) \n    11.907 \n    11.907 \n    11.796 \n  \n  \n     \n    (0.133) \n    (0.133) \n    (0.177) \n  \n  \n    ATT(2014,2020) \n    13.919 \n    13.919 \n    13.809 \n  \n  \n     \n    (0.183) \n    (0.183) \n    (0.210) \n  \n  \n    ATT(2016,2016) \n    1.173 \n    1.173 \n    1.313 \n  \n  \n     \n    (0.121) \n    (0.121) \n    (0.196) \n  \n  \n    ATT(2016,2017) \n    2.141 \n    2.141 \n    2.281 \n  \n  \n     \n    (0.189) \n    (0.189) \n    (0.282) \n  \n  \n    ATT(2016,2018) \n    3.015 \n    3.015 \n    3.155 \n  \n  \n     \n    (0.204) \n    (0.204) \n    (0.225) \n  \n  \n    ATT(2016,2019) \n    4.161 \n    4.161 \n    4.301 \n  \n  \n     \n    (0.137) \n    (0.137) \n    (0.237) \n  \n  \n    ATT(2016,2020) \n    5.083 \n    5.083 \n    5.222 \n  \n  \n     \n    (0.147) \n    (0.147) \n    (0.193) \n  \n  \n    ATT(2014,2012) \n     \n     \n    −0.039 \n  \n  \n     \n     \n     \n    (0.186) \n  \n  \n    ATT(2014,2013) \n     \n     \n    0.118 \n  \n  \n     \n     \n     \n    (0.203) \n  \n  \n    ATT(2016,2012) \n     \n     \n    −0.082 \n  \n  \n     \n     \n     \n    (0.212) \n  \n  \n    ATT(2016,2013) \n     \n     \n    0.084 \n  \n  \n     \n     \n     \n    (0.219) \n  \n  \n    ATT(2016,2014) \n     \n     \n    0.033 \n  \n  \n     \n     \n     \n    (0.293) \n  \n  \n    ATT(2016,2015) \n     \n     \n    −0.262 \n  \n  \n     \n     \n     \n    (0.165) \n  \n  \n    Num.Obs. \n    10000 \n    10000 \n     \n  \n  \n    Std.Errors \n    by: state \n    by: state \n     \n  \n  \n    FE: year \n    X \n    X \n     \n  \n  \n    FE: state \n    X \n     \n     \n  \n  \n    FE: cohort_year \n     \n    X \n     \n  \n\n\n\n\n\nThe estimates are similar, though not identical, to those from the CS approach. Note also that the SEs are generally smaller in the ETWFE models, since ETWFE pools across never-treated and not-yet treated cohorts in the pre-period, whereas CS only uses the period just before treatment. Wooldridge makes a case for this as a reason to prefer ETWFE over CS, since it uses more of the available information based on the identifying assumptions (section 6.8). Note also that the ETWFE implementation does not provide ATTs for the pre-intervention periods. Wooldridge talks more about this issue in the paper, but does provide some rationale and methods for testing pre-trends."
  },
  {
    "objectID": "did-exp.html#marginal-effects-from-etwfe",
    "href": "did-exp.html#marginal-effects-from-etwfe",
    "title": "Difference-in-Differences with Heterogenous Treatment Effects",
    "section": "Marginal effects from ETWFE",
    "text": "Marginal effects from ETWFE\nIn contrast to the did package (or csdid in Stata) from CS that automatically provides different aggregated ATTs, with ETWFE we need to do this by hand. The marginaleffects package makes this pretty straightforward. The basic idea here is to use the extended TWFE model to generate marginal predictions (and contrasts of marginal predictions) over different combinations of covariates (e.g., simple averaging, groups, time-since-treatment).\n\nSimpleCohortCalendar TimeDynamic\n\n\n\n\nCode\n# Marginal effect for ETWFE (simple)\nme_avg <- slopes(\n  etwfe, \n  newdata   = subset(d, treat),\n  variables = \"treat\", \n  by        = \"treat\"\n  )\n\n# wrangle aggregate ATTs for model summary table\nti <- data.frame(\n  term = paste(\"ATT(\", me_avg$term[2], \")\", sep = \"\"),\n  estimate = me_avg$estimate[2],\n  std.error = me_avg$std.error[2])\n\ngl <- data.frame()\n\netwfe_me_avg <- list(tidy = ti, glance = gl)\nclass(etwfe_me_avg) <- \"modelsummary_list\"\n\nmodelsummary(list(\"Simple Average\" = etwfe_me_avg),\n  gof_omit ='._*')\n\n\n\n\n \n  \n      \n    Simple Average \n  \n \n\n  \n    ATT(treat) \n    6.074 \n  \n  \n     \n    (0.083) \n  \n\n\n\n\n\n\n\n\n\nCode\n# Group effects for ETWFE (by cohort)\nme_c <- slopes(\n  etwfe, \n  newdata   = subset(d, treat & cohort_year),\n  variables = \"treat\", \n  by        = \"cohort_year\"\n  )\n\n# wrangle aggregate ATTs for model summary table\nti_c <- data.frame(\n  term = paste(\"ATT(g\", me_c$cohort_year, \")\", sep=\"\"), \n  estimate = me_c$estimate, \n  std.error = me_c$std.error)\n\netwfe_me_c <- list(tidy = ti_c, glance = gl)\nclass(etwfe_me_c) <- \"modelsummary_list\"\n\nmodelsummary(list(\"By cohort\" = etwfe_me_c),\n  gof_omit ='._*')\n\n\n\n\n \n  \n      \n    By cohort \n  \n \n\n  \n    ATT(g2014) \n    7.984 \n  \n  \n     \n    (0.115) \n  \n  \n    ATT(g2016) \n    3.115 \n  \n  \n     \n    (0.088) \n  \n\n\n\n\n\n\n\n\n\nCode\n# Group effects for ETWFE (by cohort)\nme_t <- slopes(\n  etwfe, \n  newdata   = subset(d, treat & year>=2014),\n  variables = \"treat\", \n  by        = \"year\"\n  )\n\n# wrangle aggregate ATTs for model summary table\nti_t <- data.frame(\n  term = paste(\"ATT(\", me_t$year, \")\", sep=\"\"), \n  estimate = me_t$estimate, \n  std.error = me_t$std.error)\n\netwfe_me_t <- list(tidy = ti_t, glance = gl)\nclass(etwfe_me_t) <- \"modelsummary_list\"\n\nmodelsummary(list(\"By year\" = etwfe_me_t),\n  gof_omit ='._*')\n\n\n\n\n \n  \n      \n    By year \n  \n \n\n  \n    ATT(2014) \n    1.813 \n  \n  \n     \n    (0.155) \n  \n  \n    ATT(2015) \n    4.260 \n  \n  \n     \n    (0.183) \n  \n  \n    ATT(2016) \n    3.750 \n  \n  \n     \n    (0.128) \n  \n  \n    ATT(2017) \n    5.230 \n  \n  \n     \n    (0.149) \n  \n  \n    ATT(2018) \n    6.626 \n  \n  \n     \n    (0.203) \n  \n  \n    ATT(2019) \n    8.230 \n  \n  \n     \n    (0.108) \n  \n  \n    ATT(2020) \n    9.724 \n  \n  \n     \n    (0.141) \n  \n\n\n\n\n\n\n\n\n\nCode\n# Need to add event indicators to the dataset \nd <- d %>%\n  mutate(event = year - cohort_year)\n\n# Group effects for ETWFE (by time since treatment)\nme_e <- slopes(\n  etwfe, \n  newdata   = subset(d, treat & event>=0),\n  variables = \"treat\", \n  by        = \"event\"\n  )\n\n# wrangle aggregate ATTs for model summary table\nti_e <- data.frame(\n  term = paste(\"ATT(\", me_e$event, \")\", sep=\"\"), \n  estimate = me_e$estimate, \n  std.error = me_e$std.error)\n\netwfe_me_e <- list(tidy = ti_e, glance = gl)\nclass(etwfe_me_e) <- \"modelsummary_list\"\n\nmodelsummary(list(\"Event study\" = etwfe_me_e),\n  gof_omit ='._*')\n\n\n\n\n \n  \n      \n    Event study \n  \n \n\n  \n    ATT(0) \n    1.509 \n  \n  \n     \n    (0.098) \n  \n  \n    ATT(1) \n    3.255 \n  \n  \n     \n    (0.131) \n  \n  \n    ATT(2) \n    4.624 \n  \n  \n     \n    (0.120) \n  \n  \n    ATT(3) \n    6.189 \n  \n  \n     \n    (0.121) \n  \n  \n    ATT(4) \n    7.608 \n  \n  \n     \n    (0.167) \n  \n  \n    ATT(5) \n    11.907 \n  \n  \n     \n    (0.133) \n  \n  \n    ATT(6) \n    13.919 \n  \n  \n     \n    (0.183) \n  \n\n\n\n\n\n\n\n\nIn general, it’s good to see that these different estimates of various aggregate ATTs are similar to what one gets from the CS model."
  },
  {
    "objectID": "did-exp.html#estimation-in-stata",
    "href": "did-exp.html#estimation-in-stata",
    "title": "Difference-in-Differences with Heterogenous Treatment Effects",
    "section": "Estimation in Stata",
    "text": "Estimation in Stata\nIt is mostly straightforward to also code this up in a similar way using Stata, but generally it seems easiest to create many of the indicators and product terms by hand rather than using Stata’s interaction operators.\nLet’s start with the basic TWFE model, just to verify that it is wrong in the same way as our TWFE estimate was at the beginning, which was 3.5 with an SE of 0.67:\n\n\nCode\n# Similar setup for Stata\nlibrary(RStata)\noptions(\"RStata.StataVersion\" = 16)\noptions(\"RStata.StataPath\"= '/Applications/Stata/StataMP.app/Contents/MacOS/stata-mp')\n\ns_twfe <- '\nqui xtreg y i.treat i.year, i(state) fe vce(cluster state) cformat(%4.3f)\nestimates store xttwfe\nestimates table xttwfe, b se keep(1.treat)\n'\nstata(s_twfe, data.in=d)\n\n\n. \n. qui xtreg y i.treat i.year, i(state) fe vce(cluster state) cformat(%4.3f)\n. estimates store xttwfe\n. estimates table xttwfe, b se keep(1.treat)\n\n---------------------------\n    Variable |   xttwfe    \n-------------+-------------\n     1.treat |  3.6968941  \n             |  .66533664  \n---------------------------\n               legend: b/se\n\n\nOkay so, basically the same. Now let’s run the extended TWFE model. In order to make estimating the marginal effects for aggregate ATTs a bit easier, we use the Wooldridge specification that interacts the time-varying treatment indicator with both the cohort and time dummies. This is done ‘by hand’ using product terms between the treatment indicator (treat), cohort indicators (gXXXX) and year indicators (yXXXX), for example c.treat#c.g2014#c.y2014 and so on for each of the required product terms.\nTo estimate the marginal effects is pretty straightforward, largely accomplished by using the dydx(treat) on the treated subpopulation (i.e, subpop(treat=1)) and then aggregating over various dimensions (event, cohorts, years, etc.)\n\n\nCode\n# Create new dataset for Stata analysis\ndstata <- d %>%\n  mutate(y2014 = if_else(year==2014, 1, 0),\n         y2015 = if_else(year==2015, 1, 0),\n         y2016 = if_else(year==2016, 1, 0),\n         y2017 = if_else(year==2017, 1, 0),\n         y2018 = if_else(year==2018, 1, 0),\n         y2019 = if_else(year==2019, 1, 0),\n         y2020 = if_else(year==2020, 1, 0),\n         g2014 = if_else(cohort_year == 2014, 1, 0),\n         g2016 = if_else(cohort_year == 2016, 1, 0),\n         event = year - cohort_year)\n  \n\ns_etwfe <- '\nqui xtreg y c.treat#c.g2014#c.y2014 c.treat#c.g2014#c.y2015 ///\n        c.treat#c.g2014#c.y2016 c.treat#c.g2014#c.y2017 ///\n        c.treat#c.g2014#c.y2018 c.treat#c.g2014#c.y2019 ///\n        c.treat#c.g2014#c.y2020 c.treat#c.g2016#c.y2016 ///\n        c.treat#c.g2016#c.y2017 c.treat#c.g2016#c.y2018 ///\n        c.treat#c.g2016#c.y2019 c.treat#c.g2016#c.y2020 ///\n        y2014 y2015 y2016 y2017 y2018 y2019 y2020, ///\n        i(state) fe vce(cluster state) cformat(%4.3f)\nestimates store etwfe\nesttab etwfe, b se keep(c.treat#*) nostar nonotes varwidth(25)\n\n* aggregate ATTs\n* simple\nmargins, dydx(treat) subpop(if treat==1)\n\n* group effects\nmargins, subpop(if treat==1) dydx(treat) over(cohort_year)\n\n* calendar effects\nmargins, subpop(if treat==1) dydx(treat) over(year)\n\n* dynamic effects\nmargins, dydx(treat) subpop(if treat==1)  over(event)\n'\nstata(s_etwfe, data.in=dstata)\n\n\n. \n. qui xtreg y c.treat#c.g2014#c.y2014 c.treat#c.g2014#c.y2015 ///\n>         c.treat#c.g2014#c.y2016 c.treat#c.g2014#c.y2017 ///\n>         c.treat#c.g2014#c.y2018 c.treat#c.g2014#c.y2019 ///\n>         c.treat#c.g2014#c.y2020 c.treat#c.g2016#c.y2016 ///\n>         c.treat#c.g2016#c.y2017 c.treat#c.g2016#c.y2018 ///\n>         c.treat#c.g2016#c.y2019 c.treat#c.g2016#c.y2020 ///\n>         y2014 y2015 y2016 y2017 y2018 y2019 y2020, ///\n>         i(state) fe vce(cluster state) cformat(%4.3f)\n. estimates store etwfe\n. esttab etwfe, b se keep(c.treat#*) nostar nonotes varwidth(25)\n\n--------------------------------------\n                                   (1)\n                                     y\n--------------------------------------\nc.treat#c.g2014#c.y2014          1.813\n                               (0.155)\n\nc.treat#c.g2014#c.y2015          4.260\n                               (0.183)\n\nc.treat#c.g2014#c.y2016          6.078\n                               (0.173)\n\nc.treat#c.g2014#c.y2017          8.021\n                               (0.185)\n\nc.treat#c.g2014#c.y2018          9.889\n                               (0.247)\n\nc.treat#c.g2014#c.y2019          11.91\n                               (0.133)\n\nc.treat#c.g2014#c.y2020          13.92\n                               (0.183)\n\nc.treat#c.g2016#c.y2016          1.173\n                               (0.121)\n\nc.treat#c.g2016#c.y2017          2.141\n                               (0.189)\n\nc.treat#c.g2016#c.y2018          3.015\n                               (0.204)\n\nc.treat#c.g2016#c.y2019          4.161\n                               (0.137)\n\nc.treat#c.g2016#c.y2020          5.083\n                               (0.147)\n--------------------------------------\nN                                10000\n--------------------------------------\n. \n. * aggregate ATTs\n. * simple\n. margins, dydx(treat) subpop(if treat==1)\n\nAverage marginal effects                        Number of obs     =     10,000\nModel VCE    : Robust                           Subpop. no. obs   =      4,066\n\nExpression   : Linear prediction, predict()\ndy/dx w.r.t. : treat\n\n------------------------------------------------------------------------------\n             |            Delta-method\n             |      dy/dx   Std. Err.      z    P>|z|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n       treat |   6.073905   .0828727    73.29   0.000     5.911478    6.236333\n------------------------------------------------------------------------------\n. \n. * group effects\n. margins, subpop(if treat==1) dydx(treat) over(cohort_year)\n\nAverage marginal effects                        Number of obs     =     10,000\nModel VCE    : Robust                           Subpop. no. obs   =      4,066\n\nExpression   : Linear prediction, predict()\ndy/dx w.r.t. : treat\nover         : cohort_year\n\n------------------------------------------------------------------------------\n             |            Delta-method\n             |      dy/dx   Std. Err.      z    P>|z|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\ntreat        |\n cohort_year |\n       2014  |   7.984031   .1153571    69.21   0.000     7.757936    8.210127\n       2016  |   3.114706   .0875994    35.56   0.000     2.943015    3.286398\n------------------------------------------------------------------------------\n. \n. * calendar effects\n. margins, subpop(if treat==1) dydx(treat) over(year)\n\nAverage marginal effects                        Number of obs     =     10,000\nModel VCE    : Robust                           Subpop. no. obs   =      4,066\n\nExpression   : Linear prediction, predict()\ndy/dx w.r.t. : treat\nover         : year\n\n------------------------------------------------------------------------------\n             |            Delta-method\n             |      dy/dx   Std. Err.      z    P>|z|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\ntreat        |\n        year |\n       2014  |   1.812944   .1550938    11.69   0.000     1.508965    2.116922\n       2015  |   4.260425   .1834583    23.22   0.000     3.900853    4.619996\n       2016  |   3.749868   .1284167    29.20   0.000     3.498175     4.00156\n       2017  |   5.230177   .1490019    35.10   0.000     4.938138    5.522215\n       2018  |    6.62622   .2032745    32.60   0.000     6.227809    7.024631\n       2019  |   8.229655   .1080994    76.13   0.000     8.017784    8.441526\n       2020  |   9.724495   .1410924    68.92   0.000     9.447959    10.00103\n------------------------------------------------------------------------------\n. \n. * dynamic effects\n. margins, dydx(treat) subpop(if treat==1)  over(event)\n\nAverage marginal effects                        Number of obs     =     10,000\nModel VCE    : Robust                           Subpop. no. obs   =      4,066\n\nExpression   : Linear prediction, predict()\ndy/dx w.r.t. : treat\nover         : event\n\n------------------------------------------------------------------------------\n             |            Delta-method\n             |      dy/dx   Std. Err.      z    P>|z|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\ntreat        |\n       event |\n          0  |   1.509237    .097564    15.47   0.000     1.318015    1.700458\n          1  |    3.25455   .1313684    24.77   0.000     2.997073    3.512027\n          2  |    4.62439   .1203647    38.42   0.000      4.38848    4.860301\n          3  |   6.188779   .1205432    51.34   0.000     5.952519    6.425039\n          4  |   7.607541   .1668296    45.60   0.000     7.280561    7.934521\n          5  |   11.90657   .1325372    89.84   0.000      11.6468    12.16634\n          6  |   13.91925   .1828063    76.14   0.000     13.56096    14.27755\n------------------------------------------------------------------------------\n\n\nFrom these models it seems like the basic estimates for the aggregate ATTs are pretty similar for ETWFE and CS implementations.\nNeed to add: covariates."
  }
]